/* NetRexx */
options replace format comments java crossref savelog symbols

runSample(Arg)
return

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/* REXX ***************************************************************
 * 28.02.2013 Walter Pachl
 **********************************************************************/
method getShannonEntropy(s = "1223334444") public static
--trace var occ c chars n cn i e p pl
  Numeric Digits 30
  occ = 0
  chars = ''
  n = 0
  cn = 0
  Loop i = 1 To s.length()
    c = s.substr(i, 1)
    If chars.pos(c) = 0 Then Do
      cn = cn + 1
      chars = chars || c
      End
    occ[c] = occ[c] + 1
    n = n + 1
    End i
  p = ''
  Loop ci = 1 To cn
    c = chars.substr(ci, 1)
    p[c] = occ[c] / n
    End ci
  e = 0
  Loop ci = 1 To cn
    c = chars.substr(ci, 1)
    pl = log2(p[c]) /*log(p[c], 30, 2)*/
    e = e + p[c] * pl
    End ci
  Return -e

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
method log2(a = double) public static binary returns double
  return Math.log(a) / Math.log(2)

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
method runSample(Arg) public static
  parse Arg sstr
  if sstr = '' then
    sstr = '1223334444' -
           '1223334444555555555' -
           '122333' -
           '1227774444' -
           'aaBBcccDDDD' -
           '1234567890abcdefghijklmnopqrstuvwxyz' -
           'Rosetta_Code'
  say 'Calculating Shannon''s entropy for the following list:'
  say '['(sstr.space(1, ',')).changestr(',', ', ')']'
  say
  entropies = 0
  ssMax = 0
  -- This crude sample substitutes a '_' character for a space in the input strings
  loop w_ = 1 to sstr.words()
    ss = sstr.word(w_)
    ssMax = ssMax.max(ss.length())
    ss_ = ss.changestr('_', ' ')
    entropy = getShannonEntropy(ss_)
    entropies[ss] = entropy
    end w_
  loop report = 1 to sstr.words()
    ss = sstr.word(report)
    ss_ = ss.changestr('_', ' ')
    Say 'Shannon entropy of' ('"'ss_'"').right(ssMax + 2)':' entropies[ss].format(null, 12)
    end report
  return


/* **********************************************************************
 * Return log(x) -- with specified precision and a specified base
 * Three different series are used for the ranges  0 to 0.5
 *                                                 0.5 to 1.5
 *                                                 1.5 to infinity
 * 03.09.1992 Walter Pachl
 * 25.05.2013 -"- 'my' log routine is apparently incorrect
 * 25.05.2013 -"- problem identified & corrected
 ***********************************************************************/
method log(x, prec = '', b = '') public static
  If prec = '' Then prec = 9
  Numeric Digits (2 * prec)
  --Numeric Fuzz   3
  Select
    When x <= 0 Then r = '*** invalid argument ***'
    When x < 0.5 Then Do
      z = (x - 1) / (x + 1)
      o = z
      r = z
      k = 1
      Loop i = 3 By 2
        ra = r
        k = k + 1
        o = o * z * z
        r = r + o / i
        If r = ra Then Leave i
        End i
      r = 2 * r
      End
    When x < 1.5 Then Do
      z = (x - 1)
      o = z
      r = z
      k = 1
      Loop i = 2 By 1
        ra = r
        k = k + 1
        o = -o * z
        r = r + o / i
        If r = ra Then Leave i
        End i
      End
    Otherwise /* 1.5<=x */ Do
      z = (x + 1) / (x - 1)
      o = 1 / z
      r = o
      k = 1
      Loop i = 3 By 2
        ra = r
        k = k + 1
        o = o / (z * z)
        r = r + o / i
        If r = ra Then Leave i
        End i
      r = 2 * r
      End
    End
  If b <> '' Then
    r = r / log(b, prec)
  Numeric Digits (prec)
  r = r + 0
  Return r

