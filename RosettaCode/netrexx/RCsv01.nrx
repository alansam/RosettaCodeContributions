/* NetRexx */
options replace format comments java crossref symbols
-- classpath /Users/alansampson/apache/commons/commons-csv/trunk/target/commons-csv-1.0-SNAPSHOT.jar:.

import org.apache.commons.csv.

runSample(Arg)
return

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
method processCsv(iCvs = Reader, oCvs = Writer) public static binary signals IOException
  printer = CSVPrinter null
  do
    printer = CSVPrinter(oCvs, CSVFormat.DEFAULT.withRecordSeparator(NL))
    oCvsHeaders = java.util.List
    oCvsRecord = java.util.List
    records = CSVFormat.DEFAULT.withHeader(String[0]).parse(iCvs)
    irHeader = records.getHeaderMap()
    oCvsHeaders = ArrayList(Arrays.asList((irHeader.keySet()).toArray(String[0])))
    oCvsHeaders.add(COL_NAME_SUM)
    printer.printRecord(oCvsHeaders)
    recordIterator = records.iterator()
    record = CSVRecord
    loop while recordIterator.hasNext()
      record = CSVRecord recordIterator.next()
      oCvsRecord = record2list(record, oCvsHeaders)
      printer.printRecord(oCvsRecord)
      end
  finally
    if printer \= null then printer.close()
  end
  return

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
method record2list(record = CSVRecord, oCvsHeaders = java.util.List) private static binary returns java.util.List
  cvsRecord = java.util.List
  rMap = record.toMap()
  sum = summation(record.iterator())
  rMap.put(COL_NAME_SUM, sum)
  cvsRecord = ArrayList()
  loop ci = 0 to oCvsHeaders.size() - 1
    key = oCvsHeaders.get(ci)
    cvsRecord.add(rMap.get(key))
    end ci
  return cvsRecord

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
method summation(iColumn = Iterator) private static
  sum = 0
  loop while iColumn.hasNext()
    nv = Rexx(String iColumn.next())
    if nv = null, nv.length() = 0, \nv.datatype('n') then nv = 0
    sum = sum + nv
    end
  return sum

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
method runSample(arg) private static
    iCvs = Reader null
    oCvs = Writer null
    do
      iCvs = BufferedReader(FileReader('data/csvtest_in.csv'))
      oCvs = BufferedWriter(FileWriter('data/csvtest_sumRexx.csv'))
      processCsv(iCvs, oCvs);
    catch ex = IOException
      ex.printStackTrace();
    finally
      do
        if iCvs \= null then iCvs.close()
        if oCvs \= null then oCvs.close()
      catch ex = IOException
        ex.printStackTrace()
      end
    end
  return

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
method NL private constant binary returns String
  return System.getProperty("line.separator")
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
method COL_NAME_SUM constant binary returns String
  return 'SUM, "integers"'

