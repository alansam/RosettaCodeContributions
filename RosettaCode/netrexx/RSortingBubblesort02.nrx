/* NetRexx */

options replace format comments java crossref savelog symbols binary

import java.util.List

placesList = [String -
    "UK  London",     "US  New York",   "US  Boston",     "US  Washington" -
  , "UK  Washington", "US  Birmingham", "UK  Birmingham", "UK  Boston"     -
]
sortedList = bubbleSort(String[] Arrays.copyOf(placesList, placesList.length))

lists = [placesList, sortedList]
loop ln = 0 to lists.length - 1
  cl = lists[ln]
  loop ct = 0 to cl.length - 1
    say cl[ct]
    end ct
    say
  end ln

return

method bubbleSort(item = String[]) public constant binary returns String[]

  rl = String[item.length]
  al = bubbleSort(Arrays.asList(item))
  al.toArray(rl)

  return rl

method bubbleSort(item = List) public constant binary returns ArrayList
  
  /*
    This can be expressed in pseudocode as follows (assuming 1-based indexing):

    repeat
      hasChanged := false
      decrement itemCount
      repeat with index from 1 to itemCount
        if (item at index) > (item at (index + 1))
          swap (item at index) with (item at (index + 1))
          hasChanged := true
    until hasChanged = false
  
   */
  
  -- adjusted for 0-based indexing

  hasChanged = boolean
  itemCount = item.size
  ritem = ArrayList(item)
  loop label h_ until \hasChanged
    hasChanged  = isFalse
    itemCount = itemCount - 1
    loop index = 0 to itemCount - 1
      if (Comparable ritem.get(index)).compareTo(Comparable ritem.get(index + 1)) > 0 then do
        swap = ritem.get(index)
        ritem.set(index, ritem.get(index + 1))
        ritem.set(index + 1, swap)
        hasChanged      = isTrue
        end
      end index
    end h_

  return ritem

method isTrue public constant binary returns boolean
  return 1 == 1

method isFalse public constant binary returns boolean
  return \isTrue

