/* NetRexx */
options replace format comments java crossref symbols nobinary

/*REXX program to display Pascal's triangle,  neatly centered/formatted.*/
/*AKA:   Yang Hui's ▲,   Khayyam-Pascal ▲,   Kyayyam ▲,   Tartaglia's ▲ */
numeric digits 1000                    /*let's be able to handle big ▲. */
parse arg nn .
if nn == '' then nn = 10
n = nn.abs()
a = 1
mx = factorial(n - 1) / factorial(n % 2) / factorial(n - 1 - n % 2) /*MX =biggest number in triangle.*/
w = mx.length()                         /* W =width of biggest number.   */
line = 1

loop row = 1 for n
  prev = row - 1
  a[row, 1] = 1
  loop j = 2 to row - 1
    jm = j - 1
    a[row, j] = a[prev, jm] + a[prev, j]
    line[row] = line[row] a[row, j].right(w)
    end j

  if row \== 1 then line[row] = line[row] 1.right(w)  /*append the last "1".*/
  end row

width = line[n].length()                   /*width of last line in triangle.*/

loop L = 1 for n                  /*show lines in Pascal's triangle*/
  say line[L].centre(width)     /*either SAY or write.*/
  end L

return                                 /*stick a fork in it, we're done.*/

/*─────────────────────────────────────! (factorial) subroutine─────────*/
method factorial(x) public static
  fac = 1
  loop j = 2 to x
    fac = fac * j
    end
  return fac /*calc. factorial*/

