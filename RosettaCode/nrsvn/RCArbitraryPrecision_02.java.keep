/* Generated from 'RCArbitraryPrecision_02.nrx' 12 Jul 2011 20:51:40 [v3.00] */
/* Options: Comments Crossref Decimal Format Java Logo Replace Symbols Trace2 Verbose3 */

/* NetRexx */



/* precision must be set manually */




public class RCArbitraryPrecision_02{
 private static final netrexx.lang.Rexx $01=new netrexx.lang.Rexx(190000);
 private static final netrexx.lang.Rexx $02=new netrexx.lang.Rexx(10);
 private static final netrexx.lang.Rexx $03=new netrexx.lang.Rexx(9);
 private static final netrexx.lang.Rexx $04=new netrexx.lang.Rexx(3);
 private static final netrexx.lang.Rexx $05=new netrexx.lang.Rexx(2);
 private static final netrexx.lang.Rexx $06=new netrexx.lang.Rexx(4);
 private static final netrexx.lang.Rexx $07=new netrexx.lang.Rexx(5);
 private static final netrexx.lang.Rexx $08=netrexx.lang.Rexx.toRexx("...");
 private static final java.lang.String $0="RCArbitraryPrecision_02.nrx";
 private static final netrexx.lang.RexxSet $1=new netrexx.lang.RexxSet();
 static{$1.setDigits($01);}
 
 public static void main(java.lang.String $0s[]){
  netrexx.lang.Rexx nanoFactor;
  long t1;
  netrexx.lang.Rexx n;
  long t2;
  netrexx.lang.Rexx td;
  netrexx.lang.Rexx check;
  netrexx.lang.Rexx sample;
  nanoFactor=$02.OpPow($1,$03);
  
  t1=java.lang.System.nanoTime();
  n=$07.OpPow($1,($06.OpPow($1,($04.OpPow($1,$05)))));
  t2=java.lang.System.nanoTime();
  td=new netrexx.lang.Rexx(t2).OpSub($1,new netrexx.lang.Rexx(t1));
  netrexx.lang.RexxIO.Say(netrexx.lang.Rexx.toRexx("Run time in seconds:").OpCcblank($1,td.OpDiv($1,nanoFactor)));
  netrexx.lang.RexxIO.Say("");
  
  check=netrexx.lang.Rexx.toRexx("62060698786608744707...92256259918212890625");
  sample=((n.left(new netrexx.lang.Rexx((byte)20))).OpCc($1,$08)).OpCc($1,n.right(new netrexx.lang.Rexx((byte)20)));
  
  netrexx.lang.RexxIO.Say(netrexx.lang.Rexx.toRexx("Expected result:").OpCcblank($1,check));
  netrexx.lang.RexxIO.Say(netrexx.lang.Rexx.toRexx("  Actual result:").OpCcblank($1,sample));
  netrexx.lang.RexxIO.Say(netrexx.lang.Rexx.toRexx("         digits:").OpCcblank($1,n.length()));
  netrexx.lang.RexxIO.Say("");
  
  if (check.OpEq($1,sample)) 
   
   netrexx.lang.RexxIO.Say("Result confirmed");
  else 
   netrexx.lang.RexxIO.Say("Result does not satisfy test");
  return;}
 
 private RCArbitraryPrecision_02(){return;}
 }
