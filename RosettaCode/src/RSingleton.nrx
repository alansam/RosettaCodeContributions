/* NetRexx */

options replace format comments java crossref savelog symbols binary

import java.util.random

class RSingleton public implements Runnable

  properties private
    _instance = Instance

  method run public
    say threadInfo
    thud = Thread.currentThread
    _instance = Instance.getInstance
    thud.yield
    _instance.addRef
    say threadInfo'|'_instance.getRefCount
    thud.yield
    do
      thud.sleep(_instance.getRandom.nextInt(1000))
      catch ex = InterruptedException
      ex.printStackTrace
      end
    _instance.release
    say threadInfo'|'_instance.getRefCount
    return

  method main(args = String[]) public static
    threads = [Thread Thread(RSingleton()), Thread(RSingleton())]
    say threadInfo
    mn = RSingleton()
    mn._instance = Instance.getInstance
    say mn.threadInfo'|'mn._instance.getRefCount
    mn._instance.addRef
    say mn.threadInfo'|'mn._instance.getRefCount
    loop tr over threads
      (Thread tr).start
      end tr
    Thread.sleep(400)
    mn._instance.release
    say mn.threadInfo'|'mn._instance.getRefCount
    return

  method threadInfo public static returns String
    trd = Thread.currentThread
    tid = trd.getId
    hc  = trd.hashCode
    info = Rexx(trd.getName).left(16, '_')':' -
        || Rexx(Long.toString(tid)).right(10, 0)':' -
        || '@'Rexx(Integer.toHexString(hc)).right(8, 0)
    return info

  -- ---------------------------------------------------------------------------
  class RSingleton.Instance public

    properties private static
      _instance = Instance
      _refCount = int 0
      _random   = Random()

    method Instance() private
      return

    method getInstance public static protect returns RSingleton.Instance
      if null = _instance then do
        _instance = Instance()
        end
      return _instance

  method getRandom public returns Random
    return _random

    method addRef public protect
      _refCount = _refCount + 1
      return

    method release public protect
      if _refCount > 0 then
        _refCount = _refCount - 1
      return

    method getRefCount public protect returns int
      return _refCount

