/* NetRexx */

options replace format comments java crossref savelog symbols nobinary

/**
 * Loop over multiple arrays (or lists or tuples or whatever they're called in your language)
 * and print the ith element of each. Use your language's "for each" loop if it has one,
 * otherwise iterate through the collection in order with some other loop.
 * <p>
 * For this example, loop over the arrays <code>(a,b,c)</code>, <code>(A,B,C)</code> and
 * <code>(1,2,3)</code> to produce the output
 * </p>
 * <pre>
 * aA1
 * bB2
 * cC3
 * </pre>
 * <p>
 * If possible, also describe what happens when the arrays are of different lengths.
 * </p>
 *
 * @author Alan Sampson
 * @version 1.0
 * @see <a href="http://rosettacode.org/wiki/Loop_over_multiple_arrays_simultaneously">rosettacode.org/wiki/Loop_over_multiple_arrays_simultaneously</a>
 */

say 'Using arrays'
aa = ['a', 'b', 'c', 'd']
bb = ['A', 'B', 'C']
cc = [1, 2, 3, 4]

loop x_ = 0 for aa.length
  do
    ax = aa[x_]
  catch ArrayIndexOutOfBoundsException
    ax = ' '
  end
  do
    bx = bb[x_]
  catch ArrayIndexOutOfBoundsException
    bx = ' '
  end
  do
    cx = cc[x_]
  catch ArrayIndexOutOfBoundsException
    cx = ' '
  end

  say ax || bx || cx
  end x_

say 'Using indexed strings (associative arrays)'
ai = sampleData('a b c d')
bi = sampleData('A B C')
ci = sampleData('1 2 3 4')

loop x_ = 1 to ai[0]
  say ai[x_] || bi[x_] || ci[x_]
  end x_

method sampleData(arg) public static returns Rexx
  smp = ' '
  smp[0] = arg.words
  loop i_ = 1 to smp[0]
    smp[i_] = arg.word(i_)
    end i_
    
  return smp

